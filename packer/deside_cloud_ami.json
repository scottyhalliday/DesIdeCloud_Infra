{
  "variables": {
    "aws_region": "{{env `AWS_REGION`}}",
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}"
  },
  "builders": [{
    "type": "amazon-ebs",
    "ami_description" : "DesIde Cloud application AMI.  Installs Apache2, PHP, Ruby and AWS CodeDeploy Agent.  AMI is setup to be ready to use out of the box so no further instance installs (aside from DesIde Cloud code) is needed.",
    "access_key": "{{user `aws_access_key`}}",
    "secret_key": "{{user `aws_secret_key`}}",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "name": "ubuntu/images/*ubuntu-bionic-18.04-amd64-server-*",
        "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "instance_type": "t2.micro",
    "ssh_username": "ubuntu",
    "ami_name": "DesIde-Cloud WebServer AMI",
    "tags": {
      "Name": "DesIde Cloud Webserver AMI",
      "project": "DesIde Cloud",
      "creator": "Scott Hall",
      "responsible": "Scott Hall",
      "version" : "1.0.0"
    }

  }],
  
  "provisioners": [
    {
      "type"   : "shell",
      "inline" : ["sudo apt update",
                  "sudo apt install apache2 -y",
                  "sudo apt install php -y",
                  "sudo apt install php7.2-mysql -y",
                  "sudo apt install php7.2-mysqli -y",
                  "sudo apt install php7.2-xml -y",
                  "sudo service apache2 start",
                  "sudo apt-get install ruby -y",
                  "sudo apt-get install wget -y",
                  "wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install",
                  "chmod +x ./install",
                  "sudo ./install auto",
                  "sudo service codedeploy-agent start",
                  "sudo service codedeploy-agent status",
                  "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"",
                  "php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"",
                  "php composer-setup.php",
                  "php -r \"unlink('composer-setup.php');\""
      ]
    }   
  ]
}